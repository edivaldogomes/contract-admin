# Generated by Django 3.0.3 on 2020-08-25 04:16

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Comuna',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comuna', models.CharField(choices=[('Namacunde', 'Namacunde'), ('Chiede', 'Chiede')], max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Directivo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_directivo', models.CharField(max_length=100, verbose_name='Nome do Chefe de Secção')),
                ('data_nascimento', models.DateField(verbose_name='Data de Nacimento')),
                ('empossamento', models.DateField(verbose_name='Data de Empossamento')),
                ('entrega_cargo', models.DateField(verbose_name='Data de Entrega do Cargo')),
                ('copia_bi', models.FileField(blank=True, null=True, upload_to='%y/%m/%d', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'jpg'])], verbose_name="'OBS: Só em formato PDF'")),
            ],
        ),
        migrations.CreateModel(
            name='Municipio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('municipio', models.CharField(choices=[('Namacunde', 'Namacunde')], max_length=12)),
            ],
        ),
        migrations.CreateModel(
            name='PessoaEmpresa',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_requerente', models.CharField(blank=True, max_length=50, null=True, verbose_name='Requerente')),
                ('empresa', models.CharField(blank=True, max_length=70, null=True, verbose_name='Representado por')),
                ('data_nascimento', models.DateField(blank=True, null=True, verbose_name='Data de nascimento')),
                ('nome_pai', models.CharField(blank=True, max_length=100, null=True, verbose_name='Nome do Pai')),
                ('nome_mae', models.CharField(blank=True, max_length=100, null=True, verbose_name='Nome da mãe')),
                ('estado_civil', models.CharField(choices=[('Solteiro', 'Solteiro'), ('Casado', 'Casado'), ('Divorciado', 'Divorciado')], max_length=18, verbose_name='Estado Civil')),
                ('naturalidade', models.CharField(blank=True, max_length=50, null=True, verbose_name='Naturalidade')),
                ('bi', models.CharField(blank=True, max_length=14, null=True, verbose_name='BI Nº')),
                ('copia_de_bi', models.FileField(blank=True, null=True, upload_to='%y/%m/%d', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'jpg'])], verbose_name="Cópia do BI'Só em formato PDF ou jpg'")),
                ('passado_bi', models.CharField(blank=True, max_length=50, null=True, verbose_name='Local de emissão')),
                ('residencia', models.CharField(blank=True, max_length=50, null=True, verbose_name='Residençia')),
                ('numero_casa', models.PositiveIntegerField(blank=True, null=True, verbose_name='Número da Casa')),
                ('sede', models.CharField(blank=True, max_length=100, null=True, verbose_name='Localização da Sede da Empresa')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('telefone', models.CharField(blank=True, max_length=12, null=True, verbose_name='Nº de Telefone')),
                ('comuna', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='pedido.Comuna')),
                ('municipio', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='pedido.Municipio')),
            ],
        ),
        migrations.CreateModel(
            name='Provincia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provincia', models.CharField(choices=[('Cunene', 'Cunene')], max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='TerrenoLegalizar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('projecto', models.CharField(max_length=255, verbose_name='Nome do projecto')),
                ('localizacao', models.CharField(max_length=100, verbose_name='Local do projecto')),
                ('quarterao', models.CharField(max_length=100, verbose_name='Quarteirão')),
                ('data_entrada', models.DateField(auto_now_add=True)),
                ('pago_apreciado', models.DecimalField(decimal_places=2, max_digits=6, verbose_name='Pagamento de Preciação')),
                ('metros', models.PositiveIntegerField(blank=True, null=True, verbose_name='Extenção em metros quadrados')),
                ('comuna', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='pedido.Comuna', verbose_name='Localidade/Bairro')),
                ('municipio', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='pedido.Municipio', verbose_name='Municipio')),
                ('pessoaEmpresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pedido.PessoaEmpresa', verbose_name='Legalizador')),
                ('provincia_arquivacao', models.ForeignKey(max_length=100, on_delete=django.db.models.deletion.CASCADE, to='pedido.Provincia', verbose_name='Provincia de arquivação')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='pessoaempresa',
            name='provincia',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='pedido.Provincia'),
        ),
        migrations.CreateModel(
            name='Pago',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parecer_tecnico', models.FileField(blank=True, null=True, upload_to='%y/%m/%d', validators=[django.core.validators.FileExtensionValidator(allowed_extensions='pdf')], verbose_name="Parecer Técnico 'OBS: Só formato PDF'")),
                ('primeiro', models.FloatField(verbose_name='Primeira prestação')),
                ('recibo_primeiro', models.FileField(upload_to='%y/%m/%d', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'jpg'])], verbose_name="Recibo de deposito 'OBS: Solo formato PDF ou jpg'")),
                ('segundo', models.FloatField(default=0.0, verbose_name='Segunda Prestação')),
                ('recibo_segundo', models.FileField(blank=True, null=True, upload_to='%y/%m/%d', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'jpg'])], verbose_name='Só formato PDF ou jpg')),
                ('terceiro', models.FloatField(default=0.0, verbose_name='Terceira e última prestação')),
                ('recibo_terceiro', models.FileField(blank=True, null=True, upload_to='%y/%m/%d', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'jpg'])], verbose_name='Só formato PDF ou jpg')),
                ('processo_requerente', models.FileField(blank=True, null=True, upload_to='%y/%m/%d', validators=[django.core.validators.FileExtensionValidator(allowed_extensions='pdf')], verbose_name="Processo do Requerente 'OBS: Só em formato PDF'")),
                ('projecto_legalizado', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='pedido.TerrenoLegalizar', verbose_name='Projecto Legalizado')),
            ],
        ),
        migrations.AddField(
            model_name='municipio',
            name='provincia',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pedido.Provincia'),
        ),
        migrations.AddField(
            model_name='comuna',
            name='municipio',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pedido.Municipio'),
        ),
    ]
